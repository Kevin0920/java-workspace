package com.kevin.services;

import java.util.List;
import java.util.Optional;


import org.bson.types.ObjectId;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;
import org.springframework.data.mongodb.core.aggregation.*;


import com.kevin.entities.Hotel;
import com.kevin.entities.Review;
import com.kevin.entities.Address;
import com.kevin.repositories.HotelRepository;

@Repository
public class MongoHotelServiceImpl implements HotelService{
	
	private final MongoTemplate mongoTemplate;
//	private HotelRepository hotelRepository;
	
	@Autowired
	public MongoHotelServiceImpl(MongoTemplate mongoTemplate, HotelRepository hotelRepository) {
		this.mongoTemplate = mongoTemplate;
//		this.hotelRepository = hotelRepository;
	}

	


	@Override
	public Hotel addHotel(Hotel hotel) {
		mongoTemplate.insert(hotel);
		return hotel;
	}
	

	@Override
	public List<Hotel> findAll() {
		return mongoTemplate.findAll(Hotel.class);
	}

	@Override
	public Hotel findById(String id) {
		Query query = new Query();
		query.addCriteria(Criteria.where("id").is(id));
		return mongoTemplate.findById(query, Hotel.class);
	}

	@Override
	public void deleteHotel(String id) {
		mongoTemplate.remove(id);
	}

	@Override
	public Hotel updateHotel(Hotel hotel) {
		mongoTemplate.save(hotel);
		return hotel;
	}

	@Override
	public List<Hotel> findByPricePerNight(int maxPrice) {
		return mongoTemplate.findByPricePerNight(maxPrice);
	}

	@Override
	public List<Address> findByCity(String city) {
		Query query = new Query();
		query.addCriteria(Criteria.where("city").is(city));
		
		return mongoTemplate.find(query, Address.class);
	}




	

}
